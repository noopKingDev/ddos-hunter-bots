// use std::{error::Error, io::{Read, Write}, net::TcpStream, process::Command, thread, time::Duration};

// // Lista de credenciais padrão (usuários e senhas)
// const CREDENTIALS: &[(&str, &str)] = &[
//     ("admin", "admin"),
//     ("root", "root"),
//     ("admin", "password"),
//     ("root", "1234"),
//     ("user", "user"),
//     // Adicione mais combinações conforme necessário
// ];

// pub fn try_telnet_login(ip: &String, port: u32) -> Result<String, Box<dyn Error>> {
//     for &(username, password) in CREDENTIALS {
//         println!("Tentando com usuário: {} e senha: {}", username, password);

//         let output = Command::new("ssh")
//         .arg(format!("{}@{}", username, host)) // Conexão SSH com user@host
//         .arg(command) // Comando a ser executado no servidor remoto
//         .output()?; // Execute o comando e obtenha o resultado


//         if response.contains("Login incorrect") {
//             println!("Falha ao logar com: {}:{}", username, password);
//         } else if response.contains("Login successful") || response.contains("Welcome") {
//             println!("Login bem-sucedido com: {}:{}", username, password);
//             return Ok(format!(" {} Login bem-sucedido com {}:{}", ip,username, password));
//         } else {
//             println!("Resposta inesperada: {}", response);
//         }
//     }

//     Err("Todas as tentativas de login falharam".into())
// }

